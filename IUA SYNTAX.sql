
## 5 OLDEST USER OF THE INSTAGRAM...........

SELECT * FROM USERS
ORDER BY CREATED_AT ASC
LIMIT 5;                                     

-- SELECT * FROM USERS ORDER BY CREATED_AT ASC LIMIT 5 OFFSET 10; OFFSET IS USED TO SELECT AFTER LEAVING N NUMBER OF ROWS.


## USERS WHO HAVE NEVER POSTED A SINGLE PHOTO ON INSTAGRAM.......

SELECT * FROM PHOTOS;
SELECT DISTINCT USER_ID FROM PHOTOS;
SELECT * FROM USERS WHERE USERS.ID NOT IN (SELECT DISTINCT USER_ID FROM PHOTOS);


## USER WHO GET MOST LIKES ON A SINGLE PHOTO TREATS AS A WINNER OF CONTEST.....

-- SELECT USER_ID, PHOTO_ID FROM LIKES
GROUP BY PHOTO_ID
ORDER BY COUNT(PHOTO_ID) DESC LIMIT 1;

-- SELECT COUNT(USER_ID) AS LIKES, PHOTO_ID FROM LIKES
GROUP BY PHOTO_ID
ORDER BY COUNT(USER_ID) DESC LIMIT 1;


SELECT USERNAME, PHOTO_ID, COUNT(PHOTO_ID) AS LIKES 
FROM LIKES
JOIN PHOTOS ON PHOTOS.ID = LIKES.PHOTO_ID
JOIN USERS ON USERS.ID = PHOTOS.USER_ID
GROUP BY PHOTO_ID
ORDER BY LIKES DESC LIMIT 1;


## TOP 5 MOST COMMONLY USED HASHTAGS.......

SELECT TAG_ID, TAG_NAME 
FROM PHOTO_TAGS
JOIN TAGS ON TAGS.ID = PHOTO_TAGS.TAG_ID
GROUP BY PHOTO_TAGS.TAG_ID 
ORDER BY COUNT(PHOTO_TAGS.PHOTO_ID) DESC LIMIT 5;


## WHAT DAY OF A WEEK DO MOST USERS REGISTER ON?.....

SELECT COUNT(ID) AS USERSREGISTERED, DAYNAME (CREATED_AT) AS WEEKDAY
FROM USERS
GROUP BY WEEKDAY
ORDER BY USERSREGISTERED DESC;





## HOW MANY TIMES DOES AVERAGE USER POSTS ON INSTAGRAM & ALSO TOTAL NO. OF PHOTOS ON INSTAGRM/ TOTAL NO. OF USERS...

-- SELECT(SELECT COUNT(ID) FROM PHOTOS) / (SELECT COUNT(DISTINCT USER_ID) FROM PHOTOS) AS AVG_POST_PER_ACTIVE_USER;


SELECT 
COUNT(DISTINCT (USER_ID)) AS ACTIVE_USERS,
COUNT(ID) AS TOTAL_PHOTOS,
COUNT(ID) / COUNT(DISTINCT (USER_ID)) AS AVG_POST_PER_ACTIVE_USER
FROM PHOTOS;


-- SELECT (SELECT COUNT(ID) FROM PHOTOS) / (SELECT COUNT(ID) FROM USERS) AS AVG_POST_PER_USER;


SELECT
(SELECT COUNT(ID) FROM USERS) AS TOTAL_USERS,
(SELECT COUNT(DISTINCT ID) FROM PHOTOS) AS TOTAL_PHOTOS,
(SELECT COUNT(DISTINCT ID) FROM PHOTOS) / (SELECT COUNT(ID) FROM USERS) AS AVG_POST_PER_USER;








## USER WHO HAVE LIKED EVERY SINGLE PHOTOS ON THE SITE...

WITH TABLE1 AS (SELECT USER_ID, USERNAME, COUNT(PHOTO_ID) AS TOTAL_LIKES
FROM LIKES
JOIN USERS 
ON LIKES.USER_ID = USERS.ID
GROUP BY USER_ID)
SELECT * FROM TABLE1 WHERE TABLE1.TOTAL_LIKES = (SELECT COUNT(ID) AS TOTAL_PHOTOS FROM PHOTOS);


SELECT USER_ID AS UserID, COUNT(PHOTO_ID) AS CD
FROM LIKES 
GROUP BY USER_ID WHERE CD =257;
